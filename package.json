{
    "name": "@nesci28/ts-swagger-stats-redis",
    "version": "0.0.1-beta.11",
    "description": "API Telemetry and APM. Trace API calls and Monitor API performance, health and usage statistics in Node.js Microservices, based on express routes and Swagger (Open API) specification",
    "main": "dist/index.js",
    "scripts": {
        "prepublishOnly": "npm run build",
        "build": "rm -rf ./dist && npm run copy:ux && tsc -p tsconfig.build.json",
        "copy:ux": "ncp node_modules/swagger-stats-ux/dist ux",
        "start": "node example/app.js",
        "hapitestapp": "cross-env SWS_AUTHTEST_MAXAGE=2 nyc  node examples/hapijstest/hapijstest.js",
        "fastifytestapp": "cross-env SWS_AUTHTEST_MAXAGE=2 nyc  node examples/fastify/fasifytest.js",
        "restifytestapp": "cross-env SWS_AUTHTEST_MAXAGE=2 nyc node examples/restify/restifytest.js",
        "testappstop": "mocha --delay --exit test/stoptestapp.js",
        "delay1s": "mocha --delay --exit test/delay.js",
        "test": "npm run testExpress && npm run testHapi && npm run testFastify && npm run testRestify && npm run coverage-report",
        "testExpress": "npm run cov000 && npm run cov010 && npm run cov100 && npm run cov200 && npm run cov300 && npm run cov400 && npm run cov500",
        "cov000": "nyc mocha --delay --exit test/000_baseline.js",
        "cov010": "nyc mocha --delay --exit test/010_swsapistats.js",
        "cov100": "nyc mocha --delay --exit test/100_method.js",
        "cov200": "nyc mocha --delay --exit test/200_apicore.js",
        "cov300": "nyc mocha --delay --exit test/300_timeline.js",
        "cov400": "nyc mocha --delay --exit test/400_auth.js",
        "cov500": "nyc mocha --delay --exit test/500_elastic.js",
        "cov600": "nyc mocha --delay --exit test/600_mongo.js",
        "testHapi": "concurrently -k --success first \"npm run hapitestapp\" \"npm run covHapi\"",
        "covHapi": "npm run delay1s && npm run cov000h && npm run cov100h && npm run cov200h && npm run cov300h && npm run cov400h && npm run cov500h && npm run testappstop",
        "cov000h": "nyc  mocha --delay --exit test/000_baseline.js",
        "cov100h": "nyc  mocha --delay --exit test/100_method.js",
        "cov200h": "nyc  mocha --delay --exit test/200_apicore.js",
        "cov300h": "nyc  mocha --delay --exit test/300_timeline.js",
        "cov400h": "nyc  mocha --delay --exit test/400_auth.js",
        "cov500h": "nyc  mocha --delay --exit test/500_elastic.js",
        "testFastify": "concurrently -k --success first \"npm run fastifytestapp\" \"npm run covFastify\"",
        "covFastify": "npm run delay1s && npm run cov000f && npm run cov100f && npm run cov200f && npm run cov300f && npm run cov400f && npm run cov500f && npm run testappstop",
        "cov000f": "nyc  mocha --delay --exit test/000_baseline.js",
        "cov100f": "nyc  mocha --delay --exit test/100_method.js",
        "cov200f": "nyc  mocha --delay --exit test/200_apicore.js",
        "cov300f": "nyc  mocha --delay --exit test/300_timeline.js",
        "cov400f": "nyc  mocha --delay --exit test/400_auth.js",
        "cov500f": "nyc  mocha --delay --exit test/500_elastic.js",
        "testRestify": "concurrently -k --success first \"npm run restifytestapp\" \"npm run covRestify\"",
        "covRestify": "npm run delay1s && npm run cov000r && npm run cov100r && npm run cov200r && npm run cov300r && npm run cov400r && npm run testappstop",
        "cov000r": "nyc  mocha --delay --exit test/000_baseline.js",
        "cov100r": "nyc  mocha --delay --exit test/100_method.js",
        "cov200r": "nyc  mocha --delay --exit test/200_apicore.js",
        "cov300r": "nyc  mocha --delay --exit test/300_timeline.js",
        "cov400r": "nyc  mocha --delay --exit test/400_auth.js",
        "coverage-report": "node_modules/.bin/istanbul report --root ./coverage --dir ./coverage-report lcov",
        "specstest": "mocha test/specstest/swaggerspecstest.js",
        "quickload": "artillery quick --duration 120 --rate 70 -n 20 http://localhost:3040/v2/paramstest/200/and/OK",
        "lint": "prettier-eslint \"{src,apps,libs,test,lib}/**/*.{ts,js}\" --write"
    },
    "keywords": [
        "api",
        "observability",
        "telemetry",
        "node",
        "express",
        "koa",
        "hapi",
        "fastify",
        "rest",
        "statistics",
        "monitoring",
        "alerting",
        "swagger",
        "openapi",
        "schema",
        "prometheus",
        "metrics",
        "elasticsearch",
        "kibana",
        "grafana"
    ],
    "files": [
        "dashboards/*",
        "examples/*",
        "lib/*",
        "schema/*",
        "scripts/*",
        "ux/*",
        "package.json",
        "README.md",
        "CHANGELOG.md",
        "CONTRIBUTING.md",
        "LICENSE",
        "dist/*"
    ],
    "publishConfig": {
        "registry": "https://nexus.nos.sh/repository/npm/"
    },
    "author": "https://github.com/sv2",
    "homepage": "http://swaggerstats.io",
    "bugs": {
        "url": "https://github.com/slanatech/swagger-stats/issues",
        "email": "sv2@slana.tech"
    },
    "license": "MIT",
    "dependencies": {
        "basic-auth": "^2.0.1",
        "cookies": "^0.8.0",
        "debug": "^4.3.1",
        "flat": "^5.0.2",
        "http-status-codes": "^2.2.0",
        "ioredis": "^5.2.3",
        "moment": "^2.29.1",
        "monk": "^7.3.4",
        "path-to-regexp": "^6.2.0",
        "qs": "^6.10.1",
        "request": "^2.88.2",
        "send": "^0.17.1",
        "uuid": "^8.3.2"
    },
    "peerDependencies": {
        "prom-client": ">= 10 <= 13"
    },
    "devDependencies": {
        "@hapi/hapi": "^20.1.2",
        "@hapi/inert": "^6.0.3",
        "@okidoo/eslint-config": "^1.0.24",
        "@okidoo/git-config": "^1.0.0",
        "@types/debug": "^4.1.7",
        "@types/express": "^4.17.13",
        "@types/ioredis": "^4.28.10",
        "@types/mongodb-memory-server": "^2.3.0",
        "@types/node": "^18.7.14",
        "@typescript-eslint/eslint-plugin": "^5.33.1",
        "@typescript-eslint/parser": "^5.33.1",
        "artillery": "^1.6.2",
        "body-parser": "^1.18.2",
        "chai": "^4.1.2",
        "chokidar": "^3.5.1",
        "concurrently": "^6.2.0",
        "coveralls": "^3.1.0",
        "cross-env": "^7.0.3",
        "cuid": "^2.1.8",
        "eslint": "^8.22.0",
        "eslint-config-airbnb-base": "^15.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.4.2",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jest": "^26.8.5",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-simple-import-sort": "^7.0.0",
        "eslint-plugin-unused-imports": "^2.0.0",
        "express": "^4.17.1",
        "fastify": "^3.14.1",
        "fastify-express": "^0.3.2",
        "istanbul": "^0.4.5",
        "mocha": "^8.3.2",
        "mongodb-memory-server": "^8.8.0",
        "ncp": "^2.0.0",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "prettier-eslint": "^15.0.1",
        "prettier-eslint-cli": "^7.0.0",
        "prom-client": "^13.1.0",
        "q": "^1.5.1",
        "restify": "^8.5.1",
        "serve-favicon": "^2.4.5",
        "serve-static": "^1.13.1",
        "should": "^13.2.3",
        "supertest": "^6.1.3",
        "swagger-parser": "^10.0.2",
        "swagger-stats-ux": "^0.95.29"
    }
}
